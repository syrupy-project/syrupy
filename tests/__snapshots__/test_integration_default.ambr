# name: test_failing_snapshots_diff
  '
  
  ________________________________ test_updated_1 ________________________________
  
  snapshot = SnapshotAssertion(name='snapshot', num_executions=1)
  
      def test_updated_1(snapshot):
  >       assert snapshot == ['this', 'will', 'not', 'match']
  E       AssertionError: assert snapshot == received
  E           <class 'list'> [
  E            ...
  E             'will',
  E         -   'be',
  E         -   'updated',
  E         +   'not',
  E         +   'match',
  E           ]
  
  test_file.py:17: AssertionError
  ________________________________ test_updated_2 ________________________________
  
  snapshot = SnapshotAssertion(name='snapshot', num_executions=1)
  
      def test_updated_2(snapshot):
  >       assert ['this', 'will', 'fail'] == snapshot
  E       AssertionError: assert received == snapshot
  E           <class 'list'> [
  E            ...
  E             'will',
  E         -   'be',
  E         +   'fail',
  E         -   'updated',
  E           ]
  
  test_file.py:22: AssertionError
  ________________________________ test_updated_3 ________________________________
  
  snapshot = SnapshotAssertion(name='snapshot', num_executions=1)
  
      def test_updated_3(snapshot):
  >       assert snapshot == ['this', 'will', 'be', 'too', 'much']
  E       AssertionError: assert snapshot == received
  E           <class 'list'> [
  E            ...
  E             'be',
  E         -   'updated',
  E         +   'too',
  E         +   'much',
  E           ]
  
  test_file.py:27: AssertionError
  ________________________________ test_updated_4 ________________________________
  
  snapshot = SnapshotAssertion(name='snapshot', num_executions=1)
  
      def test_updated_4(snapshot):
  >       assert snapshot == "sing line changeling"
  E       AssertionError: assert snapshot == received
  E         - 'single line change'
  E         + 'sing line changeling'
  
  test_file.py:32: AssertionError
  ________________________________ test_updated_5 ________________________________
  
  snapshot = SnapshotAssertion(name='snapshot', num_executions=1)
  
      def test_updated_5(snapshot):
  >       assert snapshot == '''
          multiple line changes
          with some lines not staying the same
          intermittent changes so unchanged lines have to be ignored by the differ
          cause when there are a lot of changes you only want to see what changed
          you do not want to see this line
          or this line
          this line should show up because it changes\n
          this line should show up because it changes color
          and this line does not exist in the first one
          '''
  E       AssertionError: assert snapshot == received
  E           '
  E             ...
  E               multiple line changes
  E         -     with some lines staying the same
  E         +     with some lines not staying the same
  E         -     intermittent changes that have to be ignore by the differ output
  E         +     intermittent changes so unchanged lines have to be ignored by the differ
  E         -     because when there are a lot of changes you only want to see changes
  E         +     cause when there are a lot of changes you only want to see what changed
  E               you do not want to see this line
  E               or this line
  E         -     this line should show up because it changes‚êç‚ê§
  E         +     this line should show up because it changes‚ê§
  E           
  E         -     [38;5;1mthis line should show up because it changes color[0m
  E         +     [38;5;3mthis line should show up because it changes color[0m
  E         +     and this line does not exist in the first one
  E               
  E           '
  
  test_file.py:37: AssertionError
  --------------------------- snapshot report summary ----------------------------
  '
---
# name: test_generated_snapshots
  '7 snapshots generated.'
---
# name: test_missing_snapshots
  '1 snapshot failed.'
---
# name: test_removed_empty_snapshot_fossil_only
  '
  7 snapshots passed. 1 unused snapshot deleted.
  
  Deleted empty snapshot fossil (__snapshots__/test_empty.ambr)
  '
---
# name: test_removed_snapshot_fossil
  '
  7 unused snapshots deleted.
  
  Deleted test_unused, test_updated_1, test_updated_2, test_updated_3, test_updated_4, test_updated_5, test_used (__snapshots__/test_file.ambr)
  '
---
# name: test_removed_snapshots
  '
  6 snapshots passed. 1 unused snapshot deleted.
  
  Deleted test_unused (__snapshots__/test_file.ambr)
  '
---
# name: test_snapshot_default_extension_option
  '1 snapshot generated.'
---
# name: test_unused_parameterized_ignored_if_not_targeted_using_dash_k
  '4 snapshots generated.'
---
# name: test_unused_parameterized_ignored_if_not_targeted_using_dash_k.1
  '
  2 snapshots passed. 1 unused snapshot deleted.
  
  Deleted test_collected[3] (__snapshots__/test_collected.ambr)
  '
---
# name: test_unused_snapshots
  '
  6 snapshots passed. 1 snapshot unused.
  
  Re-run pytest with --snapshot-update to delete unused snapshots.
  '
---
# name: test_unused_snapshots_cleaned_up_when_targeting_specific_testfiles
  '
  7 unused snapshots deleted.
  
  Deleted test_unused, test_updated_1, test_updated_2, test_updated_3, test_updated_4, test_updated_5, test_used (__snapshots__/test_file.ambr)
  '
---
# name: test_unused_snapshots_ignored_if_not_targeted_by_module_testfiles
  '
  6 snapshots passed. 1 unused snapshot deleted.
  
  Deleted test_unused (__snapshots__/test_file.ambr)
  '
---
# name: test_unused_snapshots_ignored_if_not_targeted_by_testnode_ids
  '1 snapshot passed.'
---
# name: test_unused_snapshots_ignored_if_not_targeted_using_dash_k
  '4 snapshots generated.'
---
# name: test_unused_snapshots_ignored_if_not_targeted_using_dash_k.1
  '
  1 snapshot passed. 1 snapshot updated. 1 unused snapshot deleted.
  
  Deleted test_collected[3] (__snapshots__/test_collected.ambr)
  '
---
# name: test_unused_snapshots_ignored_if_not_targeted_using_dash_m
  '4 snapshots generated.'
---
# name: test_unused_snapshots_ignored_if_not_targeted_using_dash_m.1
  '
  1 snapshot passed. 1 snapshot updated. 1 unused snapshot deleted.
  
  Deleted test_collected[3] (__snapshots__/test_collected.ambr)
  '
---
# name: test_unused_snapshots_warning
  '
  6 snapshots passed. 1 snapshot unused.
  
  Re-run pytest with --snapshot-update to delete unused snapshots.
  '
---
# name: test_updated_snapshots
  '2 snapshots passed. 5 snapshots updated.'
---
