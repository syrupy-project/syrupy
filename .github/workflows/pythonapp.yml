name: Syrupy CICD

on: [push]

env:
  CI: 1
  VENV: .venv

jobs:
  analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/detect-python
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project dependencies
        run: . script/bootstrap
      - name: Lint
        run: |
          . $VENV/bin/activate
          invoke lint
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project dependencies
        run: |
          python -m pip install -U pip --no-cache-dir
          python -m pip install -e . -r dev_requirements.txt
      - name: Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: invoke test --coverage
  version_checks:
    name: Dependency Version Constraint Checks
    runs-on: ubuntu-latest
    env:
      SKIP_DEPS: 1
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/detect-python
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project dependencies
        run: |
          . script/bootstrap
          python -m pip install -e .[test] -r min_requirements.txt
      - name: Test
        run: |
          . $VENV/bin/activate
          invoke test
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [analysis, tests, version_checks]
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/detect-python
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project dependencies
        run: . script/bootstrap
      - name: Release
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          . $VENV/bin/activate
          invoke release --no-dry-run
      - name: Benchmark
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          . $VENV/bin/activate
          invoke benchmark --report
